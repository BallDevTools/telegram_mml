<!-- views/partials/navbar.ejs -->
<nav class="bottom-nav">
    <div class="nav-items">
        <a href="/" class="nav-item <%= (typeof currentPath !== 'undefined' && currentPath === '/') ? 'active' : '' %>">
            <span class="nav-icon">üè†</span>
            <span class="nav-label">Home</span>
        </a>
        
        <a href="/membership/plans" class="nav-item <%= (typeof currentPath !== 'undefined' && currentPath.startsWith('/membership/plans')) ? 'active' : '' %>">
            <span class="nav-icon">üéØ</span>
            <span class="nav-label">Plans</span>
        </a>
        
        <% if (typeof user !== 'undefined' && user && user.walletAddress) { %>
            <a href="/membership/dashboard" class="nav-item <%= (typeof currentPath !== 'undefined' && currentPath.startsWith('/membership/dashboard')) ? 'active' : '' %>">
                <span class="nav-icon">üìä</span>
                <span class="nav-label">Dashboard</span>
            </a>
        <% } else { %>
            <a href="/wallet/connect" class="nav-item <%= (typeof currentPath !== 'undefined' && currentPath.startsWith('/wallet')) ? 'active' : '' %>">
                <span class="nav-icon">üîó</span>
                <span class="nav-label">Wallet</span>
            </a>
        <% } %>
        
        <a href="/support" class="nav-item <%= (typeof currentPath !== 'undefined' && currentPath === '/support') ? 'active' : '' %>">
            <span class="nav-icon">‚ùì</span>
            <span class="nav-label">Help</span>
        </a>
    </div>
</nav>

<style>
.bottom-nav {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    background: var(--tg-theme-bg-color);
    border-top: 1px solid var(--tg-theme-hint-color);
    padding: 8px 0 calc(8px + env(safe-area-inset-bottom));
    z-index: 1000;
    backdrop-filter: blur(10px);
}

.nav-items {
    display: flex;
    justify-content: space-around;
    align-items: center;
    max-width: 600px;
    margin: 0 auto;
    padding: 0 20px;
}

.nav-item {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 4px;
    padding: 8px 12px;
    text-decoration: none;
    color: var(--tg-theme-hint-color);
    font-size: 11px;
    font-weight: 500;
    transition: all 0.2s ease;
    border-radius: 8px;
    min-width: 60px;
    position: relative;
}

.nav-item.active {
    color: var(--tg-theme-button-color);
    background: rgba(36, 129, 204, 0.1);
}

.nav-item:hover {
    color: var(--tg-theme-button-color);
    background: rgba(36, 129, 204, 0.05);
}

.nav-item.active::before {
    content: '';
    position: absolute;
    top: -8px;
    left: 50%;
    transform: translateX(-50%);
    width: 4px;
    height: 4px;
    border-radius: 50%;
    background: var(--tg-theme-button-color);
}

.nav-icon {
    font-size: 20px;
    line-height: 1;
}

.nav-label {
    line-height: 1;
    white-space: nowrap;
}

/* Haptic feedback animation */
.nav-item:active {
    transform: scale(0.95);
    transition: transform 0.1s ease;
}

/* Badge for notifications */
.nav-item .badge {
    position: absolute;
    top: 4px;
    right: 8px;
    background: #ff3b30;
    color: white;
    font-size: 10px;
    border-radius: 10px;
    padding: 2px 6px;
    min-width: 16px;
    height: 16px;
    display: flex;
    align-items: center;
    justify-content: center;
    line-height: 1;
}

@media (max-width: 480px) {
    .nav-items {
        padding: 0 10px;
    }
    
    .nav-item {
        padding: 6px 8px;
        min-width: 50px;
        font-size: 10px;
    }
    
    .nav-icon {
        font-size: 18px;
    }
}

@media (max-width: 360px) {
    .nav-label {
        font-size: 9px;
    }
    
    .nav-item {
        min-width: 45px;
        padding: 6px 4px;
    }
}

/* Dark theme adjustments */
[data-theme="dark"] .bottom-nav {
    border-top-color: #333333;
    background: rgba(33, 33, 33, 0.95);
}

[data-theme="dark"] .nav-item.active {
    background: rgba(139, 180, 217, 0.15);
}

/* iOS style safe area */
@supports (padding-bottom: env(safe-area-inset-bottom)) {
    .bottom-nav {
        padding-bottom: calc(8px + env(safe-area-inset-bottom));
    }
}
</style>

<script>
// Add haptic feedback for navigation
document.addEventListener('DOMContentLoaded', function() {
    const navItems = document.querySelectorAll('.nav-item');
    
    navItems.forEach(item => {
        item.addEventListener('click', function() {
            // Haptic feedback
            if (window.Telegram?.WebApp?.HapticFeedback) {
                window.Telegram.WebApp.HapticFeedback.impactOccurred('light');
            }
            
            // Visual feedback
            this.style.transform = 'scale(0.95)';
            setTimeout(() => {
                this.style.transform = '';
            }, 100);
        });
    });
});

// Set active navigation based on current path
function setActiveNav() {
    const currentPath = window.location.pathname;
    const navItems = document.querySelectorAll('.nav-item');
    
    navItems.forEach(item => {
        item.classList.remove('active');
        const href = item.getAttribute('href');
        
        if (currentPath === href || (href !== '/' && currentPath.startsWith(href))) {
            item.classList.add('active');
        }
    });
}

// Update active nav on page load and navigation
document.addEventListener('DOMContentLoaded', setActiveNav);
window.addEventListener('popstate', setActiveNav);
</script>