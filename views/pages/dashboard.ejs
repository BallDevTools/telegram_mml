<!-- views/pages/dashboard.ejs - Fixed standalone version -->
<!DOCTYPE html>
<html lang="en" data-theme="<%= (typeof telegramUser !== 'undefined' && telegramUser?.colorScheme) || 'light' %>">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
    <title>Dashboard | Crypto Membership NFT</title>
    
    <!-- Telegram Web App CSS -->
    <link rel="stylesheet" href="/css/telegram.css">
    <link rel="stylesheet" href="/css/styles.css">
    <link rel="stylesheet" href="/css/components.css">
    
    <!-- Web3 Libraries -->
    <script src="https://cdn.ethers.io/lib/ethers-5.7.2.umd.min.js"></script>
    <script src="https://telegram.org/js/telegram-web-app.js"></script>
    
    <style>
        :root {
            --tg-theme-bg-color: <%= (typeof telegramUser !== 'undefined' && telegramUser?.bg_color) || '#ffffff' %>;
            --tg-theme-text-color: <%= (typeof telegramUser !== 'undefined' && telegramUser?.text_color) || '#000000' %>;
            --tg-theme-hint-color: <%= (typeof telegramUser !== 'undefined' && telegramUser?.hint_color) || '#999999' %>;
            --tg-theme-link-color: <%= (typeof telegramUser !== 'undefined' && telegramUser?.link_color) || '#2481cc' %>;
            --tg-theme-button-color: <%= (typeof telegramUser !== 'undefined' && telegramUser?.button_color) || '#2481cc' %>;
            --tg-theme-button-text-color: <%= (typeof telegramUser !== 'undefined' && telegramUser?.button_text_color) || '#ffffff' %>;
            --tg-theme-secondary-bg-color: <%= (typeof telegramUser !== 'undefined' && telegramUser?.secondary_bg_color) || '#f1f1f1' %>;
        }
        
        body {
            background-color: var(--tg-theme-bg-color);
            color: var(--tg-theme-text-color);
            margin: 0;
            padding: 0;
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            overflow-x: hidden;
            min-height: 100vh;
            padding-bottom: 80px;
        }

        .dashboard-container {
            padding: 20px;
            max-width: 1200px;
            margin: 0 auto;
        }

        .dashboard-header {
            text-align: center;
            margin-bottom: 30px;
        }

        .user-info {
            margin-top: 10px;
        }

        .membership-badge {
            display: inline-block;
            padding: 8px 16px;
            background: var(--tg-theme-button-color);
            color: var(--tg-theme-button-text-color);
            border-radius: 20px;
            margin-top: 10px;
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .stat-card {
            background: var(--tg-theme-bg-color);
            border: 1px solid #e1e5e9;
            border-radius: 12px;
            padding: 20px;
            display: flex;
            align-items: center;
            gap: 15px;
            transition: transform 0.2s ease;
        }

        .stat-card:hover {
            transform: translateY(-2px);
        }

        .stat-card.earnings {
            border-left: 4px solid #28a745;
        }

        .stat-card.referrals {
            border-left: 4px solid #007bff;
        }

        .stat-card.plan {
            border-left: 4px solid #6f42c1;
        }

        .stat-card.cycle {
            border-left: 4px solid #fd7e14;
        }

        .stat-icon {
            font-size: 2rem;
        }

        .stat-value {
            font-size: 1.5rem;
            font-weight: bold;
            color: var(--tg-theme-button-color);
        }

        .nft-section {
            margin: 40px 0;
            text-align: center;
        }

        .action-buttons {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
            margin: 30px 0;
        }

        .action-btn {
            display: flex;
            align-items: center;
            gap: 10px;
            padding: 15px 20px;
            background: var(--tg-theme-button-color);
            color: var(--tg-theme-button-text-color);
            text-decoration: none;
            border-radius: 8px;
            border: none;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: 500;
            justify-content: center;
        }

        .action-btn:hover {
            opacity: 0.9;
            transform: translateY(-1px);
        }

        .action-btn.upgrade {
            background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
        }

        .action-btn.refer {
            background: linear-gradient(135deg, #007bff 0%, #6610f2 100%);
        }

        .action-btn.refresh {
            background: linear-gradient(135deg, #6c757d 0%, #495057 100%);
        }

        .referrals-section {
            margin: 40px 0;
        }

        .referrals-list {
            display: grid;
            gap: 15px;
        }

        .referral-item {
            display: flex;
            align-items: center;
            gap: 15px;
            padding: 15px;
            background: var(--tg-theme-bg-color);
            border: 1px solid #e1e5e9;
            border-radius: 8px;
        }

        .referral-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: var(--tg-theme-button-color);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
        }

        .system-stats {
            margin: 40px 0;
            padding: 24px;
            background: var(--tg-theme-secondary-bg-color);
            border-radius: 12px;
        }

        .system-stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }

        .system-stat {
            display: flex;
            flex-direction: column;
            gap: 8px;
            text-align: center;
            padding: 16px;
            background: var(--tg-theme-bg-color);
            border-radius: 8px;
        }

        .system-stat .value {
            font-size: 1.25rem;
            font-weight: bold;
            color: var(--tg-theme-button-color);
        }

        .no-membership {
            text-align: center;
            padding: 60px 20px;
        }

        .no-membership-icon {
            font-size: 4rem;
            margin-bottom: 20px;
        }

        .cta-button {
            display: inline-block;
            padding: 15px 30px;
            background: var(--tg-theme-button-color);
            color: var(--tg-theme-button-text-color);
            text-decoration: none;
            border-radius: 8px;
            font-weight: bold;
            margin-top: 20px;
        }

        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
        }

        .modal-content {
            background-color: var(--tg-theme-bg-color);
            margin: 10% auto;
            padding: 20px;
            border-radius: 16px;
            width: 90%;
            max-width: 500px;
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .close {
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
        }

        .referral-stats {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
            margin-bottom: 20px;
        }

        .ref-stat {
            text-align: center;
            padding: 15px;
            background: var(--tg-theme-secondary-bg-color);
            border-radius: 8px;
        }

        .link-container {
            display: flex;
            gap: 10px;
            margin: 15px 0;
        }

        .link-container input {
            flex: 1;
            padding: 10px;
            border: 1px solid var(--tg-theme-hint-color);
            border-radius: 6px;
            background: var(--tg-theme-bg-color);
            color: var(--tg-theme-text-color);
        }

        .copy-btn {
            padding: 10px 15px;
            background: var(--tg-theme-button-color);
            color: var(--tg-theme-button-text-color);
            border: none;
            border-radius: 6px;
            cursor: pointer;
        }

        .share-options {
            display: flex;
            gap: 10px;
            margin-top: 15px;
        }

        .share-btn {
            flex: 1;
            padding: 12px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-weight: 500;
        }

        .share-btn.telegram {
            background: #0088cc;
            color: white;
        }

        .share-btn.qr {
            background: var(--tg-theme-secondary-bg-color);
            color: var(--tg-theme-text-color);
        }

        @media (max-width: 768px) {
            .stats-grid {
                grid-template-columns: 1fr;
            }
            
            .action-buttons {
                grid-template-columns: 1fr;
            }
            
            .system-stats-grid {
                grid-template-columns: repeat(2, 1fr);
            }
            
            .referral-stats {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <!-- Header -->
    <%- include('../partials/header') %>
    
    <div class="dashboard-container">
        <div class="dashboard-header">
            <h1>ð Dashboard</h1>
            <div class="user-info">
                <span>Welcome back, <%= telegramUser ? telegramUser.first_name : 'User' %>!</span>
                <% if (typeof membership !== 'undefined' && membership) { %>
                    <div class="membership-badge">
                        <span class="plan-name"><%= membership.planName %></span>
                        <span class="plan-level">Level <%= membership.planId %></span>
                    </div>
                <% } %>
            </div>
        </div>

        <% if (typeof membership !== 'undefined' && membership) { %>
            <!-- Member Stats -->
            <div class="stats-grid">
                <div class="stat-card earnings">
                    <div class="stat-icon">ð°</div>
                    <div class="stat-content">
                        <h3>Total Earnings</h3>
                        <div class="stat-value">
                            <%= (parseInt(membership.totalEarnings || 0) / 1000000).toFixed(2) %> USDT
                        </div>
                    </div>
                </div>

                <div class="stat-card referrals">
                    <div class="stat-icon">ð¥</div>
                    <div class="stat-content">
                        <h3>Referrals</h3>
                        <div class="stat-value"><%= membership.totalReferrals || 0 %></div>
                    </div>
                </div>

                <div class="stat-card plan">
                    <div class="stat-icon">ð¯</div>
                    <div class="stat-content">
                        <h3>Current Plan</h3>
                        <div class="stat-value">Level <%= membership.planId %></div>
                    </div>
                </div>

                <div class="stat-card cycle">
                    <div class="stat-icon">ð</div>
                    <div class="stat-content">
                        <h3>Cycle</h3>
                        <div class="stat-value">#<%= membership.cycleNumber || 1 %></div>
                    </div>
                </div>
            </div>

            <!-- NFT Card Display -->
            <div class="nft-section">
                <h2>ð¨ Your Membership NFT</h2>
                <div class="nft-card-display">
                    <%- include('../components/membership-card', { membership: membership }) %>
                </div>
            </div>

            <!-- Action Buttons -->
            <div class="action-buttons">
                <a href="/membership/plans" class="action-btn upgrade">
                    <span class="btn-icon">â¬ï¸</span>
                    <span class="btn-text">Upgrade Plan</span>
                </a>
                
                <button onclick="showReferralModal()" class="action-btn refer">
                    <span class="btn-icon">ð</span>
                    <span class="btn-text">Share Referral</span>
                </button>
                
                <button onclick="refreshData()" class="action-btn refresh">
                    <span class="btn-icon">ð</span>
                    <span class="btn-text">Refresh Data</span>
                </button>
            </div>

            <!-- Referrals Section -->
            <% if (typeof referrals !== 'undefined' && referrals && referrals.length > 0) { %>
                <div class="referrals-section">
                    <h2>ð¥ Your Referrals</h2>
                    <div class="referrals-list">
                        <% referrals.forEach(referral => { %>
                            <div class="referral-item">
                                <div class="referral-avatar">
                                    <%= referral.firstName.charAt(0).toUpperCase() %>
                                </div>
                                <div class="referral-info">
                                    <div class="referral-name">
                                        <%= referral.firstName %> <%= referral.lastName || '' %>
                                    </div>
                                    <div class="referral-username">
                                        @<%= referral.username || 'user' + referral.telegramId %>
                                    </div>
                                    <div class="referral-date">
                                        Joined: <%= new Date(referral.createdAt).toLocaleDateString() %>
                                    </div>
                                </div>
                            </div>
                        <% }); %>
                    </div>
                </div>
            <% } %>

            <!-- System Stats -->
            <div class="system-stats">
                <h2>ð System Statistics</h2>
                <div class="system-stats-grid">
                    <div class="system-stat">
                        <span class="label">Total Members</span>
                        <span class="value"><%= (typeof systemStats !== 'undefined' && systemStats) ? systemStats.totalMembers : '0' %></span>
                    </div>
                    <div class="system-stat">
                        <span class="label">Total Revenue</span>
                        <span class="value"><%= (typeof systemStats !== 'undefined' && systemStats) ? (parseInt(systemStats.totalRevenue) / 1000000).toFixed(0) : '0' %> USDT</span>
                    </div>
                    <div class="system-stat">
                        <span class="label">Total Commissions</span>
                        <span class="value"><%= (typeof systemStats !== 'undefined' && systemStats) ? (parseInt(systemStats.totalCommission) / 1000000).toFixed(0) : '0' %> USDT</span>
                    </div>
                </div>
            </div>

        <% } else { %>
            <!-- Not a member yet -->
            <div class="no-membership">
                <div class="no-membership-icon">ð</div>
                <h2>Start Your Journey</h2>
                <p>You're not a member yet. Choose a plan to get started!</p>
                <a href="/membership/plans" class="cta-button">
                    Choose Your Plan
                </a>
            </div>
        <% } %>
    </div>

    <!-- Referral Modal -->
    <div id="referralModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h3>ð Share Your Referral Link</h3>
                <span class="close" onclick="closeReferralModal()">&times;</span>
            </div>
            <div class="modal-body">
                <div class="referral-stats">
                    <div class="ref-stat">
                        <span class="label">Total Referrals</span>
                        <span class="value"><%= (typeof membership !== 'undefined' && membership) ? membership.totalReferrals : 0 %></span>
                    </div>
                    <div class="ref-stat">
                        <span class="label">Commissions Earned</span>
                        <span class="value"><%= (typeof membership !== 'undefined' && membership) ? (parseInt(membership.totalEarnings || 0) / 1000000).toFixed(2) : 0 %> USDT</span>
                    </div>
                </div>
                
                <div class="referral-link-section">
                    <h4>Your Referral Link</h4>
                    <div class="link-container">
                        <input type="text" id="referralLinkInput" readonly>
                        <button onclick="copyReferralLink()" class="copy-btn">Copy</button>
                    </div>
                    
                    <div class="share-options">
                        <button onclick="shareViaTelegram()" class="share-btn telegram">
                            ð± Share in Telegram
                        </button>
                        <button onclick="generateQRCode()" class="share-btn qr">
                            ð± Generate QR Code
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Bottom Navigation -->
    <%- include('../partials/navbar') %>

    <!-- Scripts -->
    <script src="/js/telegram.js"></script>
    <script src="/js/web3.js"></script>
    <script src="/js/wallet.js"></script>
    <script src="/js/app.js"></script>
    
    <script>
        // Initialize Telegram Web App
        if (window.Telegram?.WebApp) {
            window.Telegram.WebApp.ready();
            window.Telegram.WebApp.expand();
            
            // Set main button theme
            window.Telegram.WebApp.MainButton.setParams({
                color: '<%= (typeof telegramUser !== 'undefined' && telegramUser?.button_color) || '#2481cc' %>',
                text_color: '<%= (typeof telegramUser !== 'undefined' && telegramUser?.button_text_color) || '#ffffff' %>'
            });
        }
        
        // Pass server data to client
        window.APP_DATA = {
            user: <%- JSON.stringify((typeof user !== 'undefined' && user) || null) %>,
            telegramUser: <%- JSON.stringify((typeof telegramUser !== 'undefined' && telegramUser) || null) %>,
            contractAddress: '<%= process.env.CONTRACT_ADDRESS || '' %>',
            chainId: '<%= process.env.CHAIN_ID || '56' %>',
            rpcUrl: '<%= process.env.RPC_URL || '' %>',
            usdtAddress: '<%= process.env.USDT_CONTRACT_ADDRESS || '' %>'
        };

        function showReferralModal() {
            const modal = document.getElementById('referralModal');
            const referralLink = generateReferralLink();
            document.getElementById('referralLinkInput').value = referralLink;
            modal.style.display = 'block';
        }

        function closeReferralModal() {
            document.getElementById('referralModal').style.display = 'none';
        }

        function generateReferralLink() {
            const baseUrl = window.location.origin;
            const telegramUserId = window.APP_DATA.telegramUser?.id;
            const walletAddress = window.APP_DATA.user?.walletAddress;
            
            if (telegramUserId && walletAddress) {
                const referralCode = btoa(`${walletAddress}_${telegramUserId}`);
                return `https://t.me/<%= process.env.TELEGRAM_BOT_USERNAME || 'your_bot' %>/app?startapp=ref_${referralCode}`;
            }
            
            return baseUrl;
        }

        async function copyReferralLink() {
            const input = document.getElementById('referralLinkInput');
            try {
                await navigator.clipboard.writeText(input.value);
                if (window.Telegram?.WebApp) {
                    window.Telegram.WebApp.showAlert('Referral link copied!');
                } else {
                    alert('Referral link copied!');
                }
            } catch (error) {
                // Fallback for older browsers
                input.select();
                document.execCommand('copy');
                if (window.Telegram?.WebApp) {
                    window.Telegram.WebApp.showAlert('Referral link copied!');
                } else {
                    alert('Referral link copied!');
                }
            }
        }

        function shareViaTelegram() {
            const referralLink = document.getElementById('referralLinkInput').value;
            const message = `ð Join Crypto Membership NFT!\n\nUse my referral link to get started:\n${referralLink}`;
            
            if (window.Telegram?.WebApp) {
                window.Telegram.WebApp.switchInlineQuery(message, ['users']);
            } else {
                // Fallback for non-Telegram environments
                const telegramUrl = `https://t.me/share/url?url=${encodeURIComponent(referralLink)}&text=${encodeURIComponent(message)}`;
                window.open(telegramUrl, '_blank');
            }
        }

        async function refreshData() {
            try {
                if (window.Telegram?.WebApp) {
                    window.Telegram.WebApp.showAlert('Refreshing data...');
                } else {
                    alert('Refreshing data...');
                }
                
                // Call API to refresh membership data
                const response = await fetch('/api/membership/refresh', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
                
                if (response.ok) {
                    location.reload();
                } else {
                    if (window.Telegram?.WebApp) {
                        window.Telegram.WebApp.showAlert('Error refreshing data');
                    } else {
                        alert('Error refreshing data');
                    }
                }
            } catch (error) {
                console.error('Error refreshing data:', error);
                if (window.Telegram?.WebApp) {
                    window.Telegram.WebApp.showAlert('Error refreshing data');
                } else {
                    alert('Error refreshing data');
                }
            }
        }

        function generateQRCode() {
            // Implement QR code generation
            if (window.Telegram?.WebApp) {
                window.Telegram.WebApp.showAlert('QR Code feature coming soon!');
            } else {
                alert('QR Code feature coming soon!');
            }
        }

        // Add haptic feedback to buttons
        document.querySelectorAll('.action-btn, .share-btn, .copy-btn').forEach(btn => {
            btn.addEventListener('click', () => {
                if (window.Telegram?.WebApp?.HapticFeedback) {
                    window.Telegram.WebApp.HapticFeedback.impactOccurred('light');
                }
            });
        });

        // Close modal when clicking outside
        window.onclick = function(event) {
            const modal = document.getElementById('referralModal');
            if (event.target == modal) {
                closeReferralModal();
            }
        }
    </script>
</body>
</html>